@online{abdounAnalyzingPerformanceMutation2012,
  title = {Analyzing the {{Performance}} of {{Mutation Operators}} to {{Solve}} the {{Travelling Salesman Problem}}},
  author = {Abdoun, Otman and Abouchabaka, Jaafar and Tajani, Chakir},
  date = {2012-03-14},
  eprint = {1203.3099},
  eprinttype = {arxiv},
  eprintclass = {cs},
  doi = {10.48550/arXiv.1203.3099},
  url = {http://arxiv.org/abs/1203.3099},
  urldate = {2023-08-22},
  abstract = {The genetic algorithm includes some parameters that should be adjusted, so as to get reliable results. Choosing a representation of the problem addressed, an initial population, a method of selection, a crossover operator, mutation operator, the probabilities of crossover and mutation, and the insertion method creates a variant of genetic algorithms. Our work is part of the answer to this perspective to find a solution for this combinatorial problem. What are the best parameters to select for a genetic algorithm that creates a variety efficient to solve the Travelling Salesman Problem (TSP)? In this paper, we present a comparative analysis of different mutation operators, surrounded by a dilated discussion that justifying the relevance of genetic operators chosen to solving the TSP problem.},
  pubstate = {preprint},
  keywords = {{Computer Science - Computational Engineering, Finance, and Science},Computer Science - Neural and Evolutionary Computing},
  file = {C\:\\Users\\smfla\\Zotero\\storage\\JTBP2DDZ\\Abdoun et al. - 2012 - Analyzing the Performance of Mutation Operators to.pdf;C\:\\Users\\smfla\\Zotero\\storage\\VP88C7LB\\1203.html}
}

@article{andonovUnboundedKnapsackProblem2000,
  title = {Unbounded Knapsack Problem: {{Dynamic}} Programming Revisited},
  shorttitle = {Unbounded Knapsack Problem},
  author = {Andonov, R. and Poirriez, V. and Rajopadhye, S.},
  date = {2000-06},
  journaltitle = {European Journal of Operational Research},
  shortjournal = {European Journal of Operational Research},
  volume = {123},
  number = {2},
  pages = {394--407},
  issn = {03772217},
  doi = {10.1016/S0377-2217(99)00265-9},
  url = {https://linkinghub.elsevier.com/retrieve/pii/S0377221799002659},
  urldate = {2023-08-09},
  langid = {english}
}

@online{AndroidKotlinfirstApproach,
  title = {Android’s {{Kotlin-first}} Approach},
  url = {https://developer.android.com/kotlin/first},
  urldate = {2023-07-21},
  langid = {english},
  organization = {{Android Developers}},
  file = {C\:\\Users\\smfla\\Zotero\\storage\\6VHTEZQ6\\first.html}
}

@article{arramNovelMultiparentOrder2019,
  title = {A Novel Multi-Parent Order Crossover in Genetic Algorithm for Combinatorial Optimization Problems},
  author = {Arram, Anas and Ayob, Masri},
  date = {2019-07-01},
  journaltitle = {Computers \& Industrial Engineering},
  shortjournal = {Computers \& Industrial Engineering},
  volume = {133},
  pages = {267--274},
  issn = {0360-8352},
  doi = {10.1016/j.cie.2019.05.012},
  url = {https://www.sciencedirect.com/science/article/pii/S0360835219302773},
  urldate = {2023-08-24},
  abstract = {Many multi-parent crossovers have been proposed to solve specific combinatorial optimization problem and not applicable to solve other problems (i.e. cannot produce feasible solution). Only multi-parent partially mapped crossover (MPPMX) and adjacency-based crossover (ABC) have been proposed to work over different combinatorial problems. However, both MPPMX and ABC suffered from a very high computational time or poor performance. Therefore, this work proposes a novel multi-parent order crossover (MPOX) for solving several combinatorial optimization problems with reasonable amount of time. The MPOX extends the two-parent order crossover by modifying the recombination operator to recombine more than two parents and generates a new offspring. MPOX at first selects the crossover points and divides the parents into n substrings based on these points (where n is the number of parents). Then, MPOX copies a predefined number of elements from each parent into the offspring based on their order while checking the feasibility of the offspring. The performance of MPOX is tested on the traveling salesman problems and berth allocation problems, which are widely studied in the literature. Experimental results demonstrated that the MPOX significantly improves the OX in both problem domains and outperforms both ABC and MPPMX over the travelling salesman problem and the berth allocation problem with less computational time. These results indicate the effectiveness of MPOX over OX, ABC and MPPMX, and its capability for solving both problems.},
  keywords = {Berth allocation problem,Genetic algorithm,Multi-parent crossover,Order crossover,Traveling salesman problem},
  file = {C\:\\Users\\smfla\\Zotero\\storage\\MXFCE2PK\\S0360835219302773.html}
}

@article{barricelliNumericalTestingEvolution1962,
  title = {Numerical Testing of Evolution Theories: {{Part I Theoretical}} Introduction and Basic Tests},
  shorttitle = {Numerical Testing of Evolution Theories},
  author = {Barricelli, Nils Aall},
  date = {1962-03},
  journaltitle = {Acta Biotheoretica},
  shortjournal = {Acta Biotheor},
  volume = {16},
  number = {1-2},
  pages = {69--98},
  issn = {0001-5342, 1572-8358},
  doi = {10.1007/BF01556771},
  url = {http://link.springer.com/10.1007/BF01556771},
  urldate = {2023-06-10},
  langid = {english}
}

@book{bergelAgileArtificialIntelligence2020,
  title = {Agile Artificial Intelligence in {{Pharo}}: Implementing Neural Networks, Genetic Algorithms, and Neuroevolution},
  shorttitle = {Agile Artificial Intelligence in {{Pharo}}},
  author = {Bergel, Alexandre},
  date = {2020},
  series = {For Professionals by Professionals},
  publisher = {{Apress}},
  location = {{New York}},
  isbn = {978-1-4842-5384-7 978-1-4842-5383-0},
  langid = {english},
  pagetotal = {386},
  file = {C\:\\Users\\smfla\\Zotero\\storage\\U3R8UH37\\Bergel - 2020 - Agile artificial intelligence in Pharo implementi.pdf}
}

@inproceedings{bergelBeaconAutomatedTest2021,
  title = {Beacon: {{Automated Test Generation}} for {{Stack-Trace Reproduction}} Using {{Genetic Algorithms}}},
  shorttitle = {Beacon},
  booktitle = {2021 {{IEEE}}/{{ACM}} 14th {{International Workshop}} on {{Search-Based Software Testing}} ({{SBST}})},
  author = {Bergel, Alexandre and Slater Muñoz, Ignacio},
  date = {2021-05},
  pages = {1--7},
  publisher = {{IEEE}},
  location = {{Madrid, Spain}},
  doi = {10.1109/SBST52555.2021.00007},
  url = {https://ieeexplore.ieee.org/document/9476241/},
  urldate = {2023-06-07},
  eventtitle = {2021 {{IEEE}}/{{ACM}} 14th {{International Workshop}} on {{Search-Based Software Testing}} ({{SBST}})},
  isbn = {978-1-66544-571-9}
}

@article{blickleMathematicalAnalysisTournament1995,
  title = {A {{Mathematical Analysis}} of {{Tournament Selection}}.},
  author = {Blickle, Tobias and Thiele, Lothar},
  date = {1995},
  journaltitle = {ICGA},
  volume = {95},
  pages = {9--15}
}

@online{CallingJavaKotlin,
  title = {Calling {{Java}} from {{Kotlin}} | {{Kotlin}}},
  url = {https://kotlinlang.org/docs/java-interop.html},
  urldate = {2023-07-21},
  langid = {american},
  organization = {{Kotlin Help}}
}

@online{CallingKotlinJava,
  title = {Calling {{Kotlin}} from {{Java}} | {{Kotlin}}},
  url = {https://kotlinlang.org/docs/java-to-kotlin-interop.html},
  urldate = {2023-07-21},
  langid = {american},
  organization = {{Kotlin Help}},
  file = {C\:\\Users\\smfla\\Zotero\\storage\\53F8CNNK\\java-to-kotlin-interop.html}
}

@article{chenFeatureSelectionImprove2017,
  title = {Feature {{Selection}} to {{Improve Generalization}} of {{Genetic Programming}} for {{High-Dimensional Symbolic Regression}}},
  author = {Chen, Qi and Zhang, Mengjie and Xue, Bing},
  date = {2017-10},
  journaltitle = {IEEE Transactions on Evolutionary Computation},
  volume = {21},
  number = {5},
  pages = {792--806},
  issn = {1941-0026},
  doi = {10.1109/TEVC.2017.2683489},
  abstract = {When learning from high-dimensional data for symbolic regression (SR), genetic programming (GP) typically could not generalize well. Feature selection, as a data preprocessing method, can potentially contribute not only to improving the efficiency of learning algorithms but also to enhancing the generalization ability. However, in GP for high-dimensional SR, feature selection before learning is seldom considered. In this paper, we propose a new feature selection method based on permutation to select features for high-dimensional SR using GP. A set of experiments has been conducted to investigate the performance of the proposed method on the generalization of GP for high-dimensional SR. The regression results confirm the superior performance of the proposed method over the other examined feature selection methods. Further analysis indicates that the models evolved by the proposed method are more likely to contain only the truly relevant features and have better interpretability.},
  eventtitle = {{{IEEE Transactions}} on {{Evolutionary Computation}}},
  keywords = {Complexity theory,Computational modeling,Decision trees,Feature extraction,Feature selection,generalization,Genetic programming,genetic programming (GP),Space exploration,symbolic regression (SR),Training},
  file = {C\:\\Users\\smfla\\Zotero\\storage\\ICEVZU8N\\Chen et al. - 2017 - Feature Selection to Improve Generalization of Gen.pdf;C\:\\Users\\smfla\\Zotero\\storage\\EUZWN42X\\7879832.html}
}

@article{chenRademacherComplexityEnhancing2022,
  title = {Rademacher {{Complexity}} for {{Enhancing}} the {{Generalization}} of {{Genetic Programming}} for {{Symbolic Regression}}},
  author = {Chen, Qi and Xue, Bing and Zhang, Mengjie},
  date = {2022-04},
  journaltitle = {IEEE Transactions on Cybernetics},
  volume = {52},
  number = {4},
  pages = {2382--2395},
  issn = {2168-2275},
  doi = {10.1109/TCYB.2020.3004361},
  abstract = {Model complexity has a close relationship with the generalization ability and the interpretability of the learned models. Simple models are more likely to generalize well and easy to interpret. However, too much emphasis on minimizing complexity can prevent the discovery of more complex yet more accurate solutions. Genetic programming (GP) has a trend of generating overcomplex models that are difficult to interpret while not being able to generalize well. This work proposes a novel complexity measure based on the Rademacher complexity for GP for symbolic regression. The complexity of an evolved model is measured by the maximum correlation between the model and the Rademacher variables on the selected training instances. Taking minimizing the training error and the Rademacher complexity of the models as the two objectives, the proposed GP method has shown to be much superior to the standard GP on generalization performance. Compared with GP equipped with two state-of-the-art complexity measures, the proposed method still has a notable advance on generating a better front consisting of individuals with lower generalization errors and being simpler in the behavioral complexity. Further analyses reveal that compared with the state-of-the-art methods, the proposed GP method evolves models that are much closer to the target models in the model structure, and have better interpretability.},
  eventtitle = {{{IEEE Transactions}} on {{Cybernetics}}},
  keywords = {Complexity theory,Data models,Generalization,Genetic programming,genetic programming (GP),Mathematical model,Measurement uncertainty,Predictive models,Rademacher complexity,Training},
  file = {C\:\\Users\\smfla\\Zotero\\storage\\YP3WATMB\\Chen et al. - 2022 - Rademacher Complexity for Enhancing the Generaliza.pdf}
}

@article{collinsComparisonGeneticSequencing,
  title = {A {{Comparison}} of {{Genetic Sequencing Operators}}},
  author = {Collins, Fort},
  pages = {8},
  abstract = {This work compares six sequencing operators that have been developed for use with genetic algorithms. An improved version of the edge recombination operator is presented, the concepts of adjacency, order, and position are reviewed in the context of these operators, and results are compared for a 30 city \textbackslash Blind" Traveling Salesman Problem and a real world warehouse/shipping scheduling application. Results indicate that the e ectiveness of di erent operators is dependent on the problem domain; operators which work well in problems where adjacency is important (e.g., the Traveling Salesman) may not be e ective for other types of sequencing problems. Operators which perform poorly on the Blind Traveling Salesman Problem work extremely well for the warehouse scheduling task.},
  langid = {english},
  file = {C\:\\Users\\smfla\\Zotero\\storage\\4GJMEFNW\\Collins - A Comparison of Genetic Sequencing Operators.pdf}
}

@inproceedings{dasguptaComparisonMultiobjectiveEvolutionary2008,
  title = {A Comparison of Multiobjective Evolutionary Algorithms with Informed Initialization and Kuhn-Munkres Algorithm for the Sailor Assignment Problem},
  booktitle = {Proceedings of the 10th Annual Conference Companion on {{Genetic}} and Evolutionary Computation},
  author = {Dasgupta, Dipankar and Hernandez, German and Garrett, Deon and Vejandla, Pavan Kalyan and Kaushal, Aishwarya and Yerneni, Ramjee and Simien, James},
  date = {2008-07-12},
  series = {{{GECCO}} '08},
  pages = {2129--2134},
  publisher = {{Association for Computing Machinery}},
  location = {{New York, NY, USA}},
  doi = {10.1145/1388969.1389035},
  url = {https://doi.org/10.1145/1388969.1389035},
  urldate = {2023-08-13},
  abstract = {This paper examines the performance of two multiobjective evolutionary algorithms, NSGA-II and SPEA2, with informed initialization on large instances of United States Navy's Sailor Assignment Problem. The informed initialization includes in the initial population special solutions obtained by an extension of the Kuhn-Munkres algorithm. The Kuhn-Munkres algorithm, a classical algorithm that solves in \$O(n\^3)\$ time instances of the single valued linear assignment problem, is extended here to render it applicable on single objective instances of the sailor assignment problem obtained using weight vectors to scalarize the natural multiobjective formulation. The Kuhn-Munkres extension is also used to provide a performance benchmark for comparison with the evolutionary algorithms.},
  isbn = {978-1-60558-131-6},
  keywords = {evolutionary algorithms,multiobjective optimization}
}

@online{DEAPDocumentationDEAP,
  title = {{{DEAP}} Documentation — {{DEAP}} 1.3.3 Documentation},
  url = {https://deap.readthedocs.io/en/master/},
  urldate = {2023-06-08},
  file = {C\:\\Users\\smfla\\Zotero\\storage\\VHR98X95\\master.html}
}

@inproceedings{debDistributedComputingParetoOptimal2003,
  title = {Distributed {{Computing}} of {{Pareto-Optimal Solutions}} with {{Evolutionary Algorithms}}},
  booktitle = {Evolutionary {{Multi-Criterion Optimization}}},
  author = {Deb, Kalyanmoy and Zope, Pawan and Jain, Abhishek},
  editor = {Fonseca, Carlos M. and Fleming, Peter J. and Zitzler, Eckart and Thiele, Lothar and Deb, Kalyanmoy},
  date = {2003},
  series = {Lecture {{Notes}} in {{Computer Science}}},
  pages = {534--549},
  publisher = {{Springer}},
  location = {{Berlin, Heidelberg}},
  doi = {10.1007/3-540-36970-8_38},
  abstract = {In this paper, we suggest a distributed computing approach for finding multiple Pareto-optimal solutions. When the number of objective functions is large, the resulting Pareto-optimal front is of large dimension, thereby requiring a single processor multi-objective EA (MOEA) to use a large population size and run for a large number of generations. However, the task of finding a well-distributed set of solutions on the Pareto-optimal front can be distributed among a number of processors, each pre-destined to find a particular portion of the Pareto-optimal set. Based on the guided domination approach [1], here we propose a modified domination criterion for handling problems with a convex Pareto-optimal front. The proof-of-principle results obtained with a parallel version of NSGA-II shows the efficacy of the proposed approach.},
  isbn = {978-3-540-36970-7},
  langid = {english},
  keywords = {Island Model,Objective Space,Pareto Front,Population Member,Single Processor}
}

@book{dejongEvolutionaryComputationUnified2006,
  title = {Evolutionary {{Computation}}: {{A Unified Approach}}},
  author = {De Jong, Kenneth A.},
  date = {2006},
  url = {https://ieeexplore.ieee.org/servlet/opac?bknumber=6267245},
  isbn = {978-0-262-25598-1}
}

@inproceedings{dep.veroneseDifferentialEvolutionAlgorithm2010a,
  title = {Differential Evolution Algorithm on the {{GPU}} with {{C-CUDA}}},
  booktitle = {{{IEEE Congress}} on {{Evolutionary Computation}}},
  author = {family=P. Veronese, given=Lucas, prefix=de, useprefix=true and Krohling, Renato A.},
  date = {2010-07},
  pages = {1--7},
  issn = {1941-0026},
  doi = {10.1109/CEC.2010.5586219},
  abstract = {Several areas of knowledge are being benefited with the reduction of the computing time by using the technology of Graphics Processing Units (GPU) and the Compute Unified Device Architecture (CUDA) platform. In case of Evolutionary algorithms, which are inherently parallel, this technology may be advantageous for running experiments demanding high computing time. In this paper, we provide an implementation of the Differential Evolution (DE) algorithm in C-CUDA. The algorithm was tested on a suite of well-known benchmark optimization problems and the computing time has been compared with the same algorithm implemented in C. Results demonstrate that the computing time can significantly be reduced using C-CUDA. As far as we know, this is the first implementation of DE algorithm in C-CUDA.},
  eventtitle = {{{IEEE Congress}} on {{Evolutionary Computation}}},
  keywords = {Benchmark testing,Chromium,Computational Performance Evaluation,Compute Unified Device Architecture(CUDA) C-CUDA platform,Differential Evolution,Graphics processing unit,Graphics Processing Unit (GPU),Instruction sets,Optimization,Performance evaluation,Resource management}
}

@inproceedings{desellAnalysisMassivelyDistributed2010,
  title = {An Analysis of Massively Distributed Evolutionary Algorithms},
  booktitle = {{{IEEE Congress}} on {{Evolutionary Computation}}},
  author = {Desell, Travis and Anderson, David P. and Magdon-Ismail, Malik and Newberg, Heidi and Szymanski, Boleslaw K. and Varela, Carlos A.},
  date = {2010-07},
  pages = {1--8},
  issn = {1941-0026},
  doi = {10.1109/CEC.2010.5586073},
  abstract = {Computational science is placing new demands on optimization algorithms as the size of data sets and the computational complexity of scientific models continue to increase. As these complex models have many local minima, evolutionary algorithms (EAs) are very useful for quickly finding optimal solutions in these challenging search spaces. In addition to the complex search spaces involved, calculating the objective function can be extremely demanding computationally. Because of this, distributed computation is a necessity. In order to address these computational demands, top-end distributed computing systems are surpassing hundreds of thousands of computing hosts; and as in the case of Internet based volunteer computing systems, they can also be highly heterogeneous and faulty. This work examines asynchronous strategies for distributed EAs using simulated computing environments. Results show that asynchronous EAs can scale to hundreds of thousands of computing hosts while being highly resilient to heterogeneous and faulty computing environments, something not possible for traditional distributed EAs which require synchronization. While the simulation not only provides insight as to how asynchronous EAs perform on distributed computing environments with different latencies and heterogeneity, it also serves as a sanity check because live distributed systems require problems with high computation to communication ratios and traditional benchmark problems cannot be used for meaningful analysis due to their short computation times.},
  eventtitle = {{{IEEE Congress}} on {{Evolutionary Computation}}},
  keywords = {Benchmark testing,Computational modeling,Convergence,Distributed computing,Optimization,Particle swarm optimization}
}

@software{djakobovicECFEvolutionaryComputation2023,
  title = {{{ECF}} - {{Evolutionary Computation Framework}}},
  author = {{djakobovic}},
  date = {2023-03-13T20:03:45Z},
  origdate = {2022-08-12T14:21:07Z},
  url = {https://github.com/djakobovic/ECF},
  urldate = {2023-08-09},
  abstract = {Evolutionary Computation Framework}
}

@online{EasyGaSrc,
  title = {Easy\_ga/Src at Main · {{RubenRubioM}}/Easy\_ga},
  url = {https://github.com/RubenRubioM/easy_ga},
  urldate = {2023-06-13},
  abstract = {Genetic algorithm library for RUST. Contribute to RubenRubioM/easy\_ga development by creating an account on GitHub.},
  langid = {english},
  organization = {{GitHub}},
  file = {C\:\\Users\\smfla\\Zotero\\storage\\S6EJI68G\\easy_ga.html}
}

@online{ECJ,
  title = {{{ECJ}}},
  url = {https://cs.gmu.edu/~eclab/projects/ecj/},
  urldate = {2023-06-08},
  file = {C\:\\Users\\smfla\\Zotero\\storage\\V2KXY4MZ\\ecj.html}
}

@inproceedings{elsayedGANewMultiparent2011,
  title = {{{GA}} with a New Multi-Parent Crossover for Solving {{IEEE-CEC2011}} Competition Problems},
  booktitle = {2011 {{IEEE Congress}} of {{Evolutionary Computation}} ({{CEC}})},
  author = {Elsayed, Saber M. and Sarker, Ruhul A. and Essam, Daryl L.},
  date = {2011-06},
  pages = {1034--1040},
  issn = {1941-0026},
  doi = {10.1109/CEC.2011.5949731},
  abstract = {Over the last two decades, many Genetic Algorithms have been introduced for solving optimization problems. Due to the variability of the characteristics in different optimization problems, none of these algorithms performs consistently over a range of problems. In this paper, we introduce a GA with a new multi-parent crossover for solving a variety of optimization problems. The proposed algorithm also uses both a randomized operator as mutation and maintains an archive of good solutions. The algorithm has been applied to solve the set of real world problems proposed for the IEEE-CEC2011 evolutionary algorithm competition.},
  eventtitle = {2011 {{IEEE Congress}} of {{Evolutionary Computation}} ({{CEC}})},
  keywords = {Algorithm design and analysis,Evolution (biology),Gaussian distribution,genetic algorithms,Genetic algorithms,Numerical optimization,Optimization,Particle swarm optimization},
  file = {C\:\\Users\\smfla\\Zotero\\storage\\5IFM6S7A\\5949731.html}
}

@online{EvolvingObjectsWelcomeEvolving,
  title = {{{EvolvingObjects}}: {{Welcome}} to {{Evolving Objects}}},
  url = {https://eodev.sourceforge.net/eo/doc/html/index.html},
  urldate = {2023-06-08},
  file = {C\:\\Users\\smfla\\Zotero\\storage\\YZ5PB97M\\index.html}
}

@online{GenevoRust,
  title = {Genevo - {{Rust}}},
  url = {https://docs.rs/genevo/latest/genevo/index.html},
  urldate = {2023-06-13},
  file = {C\:\\Users\\smfla\\Zotero\\storage\\UEKCMBVK\\index.html}
}

@software{giacomelliGeneticSharp2023,
  title = {{{GeneticSharp}}},
  author = {Giacomelli, Diego},
  date = {2023-06-07T11:43:07Z},
  origdate = {2013-08-02T00:37:51Z},
  url = {https://github.com/giacomelli/GeneticSharp},
  urldate = {2023-06-08},
  abstract = {GeneticSharp is a fast, extensible, multi-platform and multithreading C\# Genetic Algorithm library that simplifies the development of applications using Genetic Algorithms (GAs).},
  keywords = {artificial-intelligence,c-sharp,dotnet,dotnet-core,dotnet-standard,dotnet6,genetic-algorithm,genetic-algorithms,unity3d}
}

@online{GNULesserGeneral,
  title = {{{GNU Lesser General Public License}} v3.0 - {{GNU Project}} - {{Free Software Foundation}}},
  url = {https://www.gnu.org/licenses/lgpl-3.0.en.html},
  urldate = {2023-07-26},
  file = {C\:\\Users\\smfla\\Zotero\\storage\\BLBVKJYF\\lgpl-3.0.en.html}
}

@article{guzekMultiobjectiveEvolutionaryAlgorithms2014,
  title = {Multi-Objective Evolutionary Algorithms for Energy-Aware Scheduling on Distributed Computing Systems},
  author = {Guzek, Mateusz and Pecero, Johnatan E. and Dorronsoro, Bernabé and Bouvry, Pascal},
  date = {2014-11-01},
  journaltitle = {Applied Soft Computing},
  shortjournal = {Applied Soft Computing},
  volume = {24},
  pages = {432--446},
  issn = {1568-4946},
  doi = {10.1016/j.asoc.2014.07.010},
  url = {https://www.sciencedirect.com/science/article/pii/S1568494614003408},
  urldate = {2023-08-08},
  abstract = {The ongoing increase of energy consumption by IT infrastructures forces data center managers to find innovative ways to improve energy efficiency. The latter is also a focal point for different branches of computer science due to its financial, ecological, political, and technical consequences. One of the answers is given by scheduling combined with dynamic voltage scaling technique to optimize the energy consumption. The way of reasoning is based on the link between current semiconductor technologies and energy state management of processors, where sacrificing the performance can save energy. This paper is devoted to investigate and solve the multi-objective precedence constrained application scheduling problem on a distributed computing system, and it has two main aims: the creation of general algorithms to solve the problem and the examination of the problem by means of the thorough analysis of the results returned by the algorithms. The first aim was achieved in two steps: adaptation of state-of-the-art multi-objective evolutionary algorithms by designing new operators and their validation in terms of performance and energy. The second aim was accomplished by performing an extensive number of algorithms executions on a large and diverse benchmark and the further analysis of performance among the proposed algorithms. Finally, the study proves the validity of the proposed method, points out the best-compared multi-objective algorithm schema, and the most important factors for the algorithms performance.},
  langid = {english},
  keywords = {Dynamic voltage scaling,Energy efficiency,Evolutionary algorithms,Multi-objective optimization,Scheduling},
  file = {C\:\\Users\\smfla\\Zotero\\storage\\ZPN8V42L\\Guzek et al. - 2014 - Multi-objective evolutionary algorithms for energy.pdf}
}

@book{hollandAdaptationNaturalArtificial1992a,
  title = {Adaptation in Natural and Artificial Systems: An Introductory Analysis with Applications to Biology, Control, and Artificial Intelligence},
  shorttitle = {Adaptation in Natural and Artificial Systems},
  author = {Holland, John H.},
  date = {1992},
  series = {Complex Adaptive Systems},
  edition = {1st MIT Press ed},
  publisher = {{MIT Press}},
  location = {{Cambridge, Mass}},
  isbn = {978-0-262-08213-6 978-0-262-58111-0},
  pagetotal = {211},
  keywords = {Adaptation (Biology),Adaptive control systems,Mathematical models}
}

@online{InspyredBioinspiredAlgorithms,
  title = {Inspyred: {{Bio-inspired Algorithms}} in {{Python}} — Inspyred 1.0.1 Documentation},
  url = {https://aarongarrett.github.io/inspyred/},
  urldate = {2023-06-08},
  file = {C\:\\Users\\smfla\\Zotero\\storage\\GLXQI44N\\inspyred.html}
}

@online{KotestKotesta,
  title = {Kotest | {{Kotest}}},
  url = {https://kotest.io/},
  urldate = {2023-08-03},
  abstract = {Flexible, powerful and elegant kotlin test framework with multiplatform support},
  langid = {english},
  file = {C\:\\Users\\smfla\\Zotero\\storage\\H2N362GE\\kotest.io.html}
}

@online{KotlinJavaInteropGuide,
  title = {Kotlin-{{Java}} Interop Guide},
  url = {https://developer.android.com/kotlin/interop},
  urldate = {2023-07-21},
  langid = {english},
  organization = {{Android Developers}},
  file = {C\:\\Users\\smfla\\Zotero\\storage\\VSVJ4Y4Z\\interop.html}
}

@online{KotlinProgrammingLanguagea,
  title = {Kotlin {{Programming Language}}},
  url = {https://kotlinlang.org/},
  urldate = {2023-07-21},
  abstract = {Kotlin is a programming language that makes coding concise, cross-platform, and fun. It is Google’s preferred language for Android app development.},
  langid = {english},
  organization = {{Kotlin}},
  file = {C\:\\Users\\smfla\\Zotero\\storage\\S7I8PF63\\kotlinlang.org.html}
}

@software{KotlinTelegramBot2023,
  title = {Kotlin {{Telegram Bot}}},
  date = {2023-08-03T15:53:03Z},
  origdate = {2018-02-12T10:56:43Z},
  url = {https://github.com/kotlin-telegram-bot/kotlin-telegram-bot},
  urldate = {2023-08-03},
  abstract = {🤖 A wrapper for the Telegram Bot API written in Kotlin},
  organization = {{Kotlin Telegram Bot}},
  keywords = {hacktoberfest,kotlin,telegram,telegram-bot,telegram-bot-api}
}

@software{KotlinxHtml2023,
  title = {Kotlinx.Html},
  date = {2023-08-03T16:14:16Z},
  origdate = {2015-04-02T09:44:50Z},
  url = {https://github.com/Kotlin/kotlinx.html},
  urldate = {2023-08-03},
  abstract = {Kotlin DSL for HTML},
  organization = {{Kotlin}},
  keywords = {dsl,html,kotlin}
}

@book{kozaGeneticProgrammingII1994,
  title = {Genetic Programming {{II}}: Automatic Discovery of Reusable Programs},
  shorttitle = {Genetic Programming {{II}}},
  author = {Koza, John R.},
  date = {1994},
  series = {Complex Adaptive Systems},
  publisher = {{MIT Press}},
  location = {{Cambridge, Mass}},
  isbn = {978-0-262-11189-8},
  pagetotal = {746},
  keywords = {Genetic programming (Computer science)}
}

@book{kozaGeneticProgrammingProgramming1992a,
  title = {Genetic Programming. 1: {{On}} the Programming of Computers by Means of Natural Selection},
  shorttitle = {Genetic Programming. 1},
  author = {Koza, John R.},
  date = {1992},
  series = {Complex Adaptive Systems},
  publisher = {{MIT Press}},
  location = {{Cambridge, Mass.}},
  isbn = {978-0-262-52791-0},
  langid = {english},
  pagetotal = {819}
}

@article{kushchuGeneticProgrammingEvolutionary2002,
  title = {Genetic Programming and Evolutionary Generalization},
  author = {Kushchu, I.},
  date = {2002-10},
  journaltitle = {IEEE Transactions on Evolutionary Computation},
  volume = {6},
  number = {5},
  pages = {431--442},
  issn = {1941-0026},
  doi = {10.1109/TEVC.2002.805038},
  abstract = {In genetic programming (GP), learning problems can be classified broadly into two types: those using data sets, as in supervised learning, and those using an environment as a source of feedback. An increasing amount of research has concentrated on the robustness or generalization ability of the programs evolved using GP. While some of the researchers report on the brittleness of the solutions evolved, others proposed methods of promoting robustness/generalization. It is important that these methods are not ad hoc and are applicable to other experimental setups. In this paper, learning concepts from traditional machine learning and a brief review of research on generalization in GP are presented. The paper also identifies problems with brittleness of solutions produced by GP and suggests a method for promoting robustness/generalization of the solutions in simulating learning behaviors using GP.},
  eventtitle = {{{IEEE Transactions}} on {{Evolutionary Computation}}},
  keywords = {Artificial intelligence,Computational modeling,Decision trees,Feedback,Genetic programming,Learning systems,Machine learning,Robustness,Supervised learning,Testing},
  file = {C\:\\Users\\smfla\\Zotero\\storage\\8ACGUP8A\\1041553.html}
}

@book{langdonFoundationsGeneticProgramming2002,
  title = {Foundations of Genetic Programming},
  author = {Langdon, W. B. and Poli, Riccardo},
  date = {2002},
  publisher = {{Springer}},
  location = {{Berlin ; New York}},
  isbn = {978-3-540-42451-2},
  pagetotal = {260},
  keywords = {Genetic programming (Computer science)}
}

@online{LatestProgrammingLanguages2023,
  title = {The {{Latest Programming Languages Statistics}} \& {{Trends For}} 2023 • {{GITNUX}}},
  date = {2023-02-01T19:50:51+01:00},
  url = {https://blog.gitnux.com/programming-languages-statistics/},
  urldate = {2023-07-21},
  abstract = {In this article, we will explore the most popular programming languages statistics. We will look at their usage, trends, and popularity over the past few},
  langid = {american},
  file = {C\:\\Users\\smfla\\Zotero\\storage\\TRMASKUG\\programming-languages-statistics.html}
}

@inproceedings{liskowskiComparisonSemanticawareSelection2015,
  title = {Comparison of {{Semantic-aware Selection Methods}} in {{Genetic Programming}}},
  booktitle = {Proceedings of the {{Companion Publication}} of the 2015 {{Annual Conference}} on {{Genetic}} and {{Evolutionary Computation}}},
  author = {Liskowski, Pawel and Krawiec, Krzysztof and Helmuth, Thomas and Spector, Lee},
  date = {2015-07-11},
  pages = {1301--1307},
  publisher = {{ACM}},
  location = {{Madrid Spain}},
  doi = {10.1145/2739482.2768505},
  url = {https://dl.acm.org/doi/10.1145/2739482.2768505},
  urldate = {2023-06-21},
  eventtitle = {{{GECCO}} '15: {{Genetic}} and {{Evolutionary Computation Conference}}},
  isbn = {978-1-4503-3488-4},
  langid = {english}
}

@inproceedings{luongGPUbasedIslandModel2010,
  title = {{{GPU-based}} Island Model for Evolutionary Algorithms},
  booktitle = {Proceedings of the 12th Annual Conference on {{Genetic}} and Evolutionary Computation},
  author = {Luong, Thé Van and Melab, Nouredine and Talbi, El-Ghazali},
  date = {2010-07-07},
  series = {{{GECCO}} '10},
  pages = {1089--1096},
  publisher = {{Association for Computing Machinery}},
  location = {{New York, NY, USA}},
  doi = {10.1145/1830483.1830685},
  url = {https://doi.org/10.1145/1830483.1830685},
  urldate = {2023-08-08},
  abstract = {The island model for evolutionary algorithms allows to delay the global convergence of the evolution process and encourage diversity. However, solving large size and time-intensive combinatorial optimization problems with the island model requires a large amount of computational resources. GPU computing is recently revealed as a powerful way to harness these resources. In this paper, we focus on the parallel island model on GPU. We address its re-design, implementation, and associated issues related to the GPU execution context. The preliminary results demonstrate the effectiveness of the proposed approaches and their capabilities to fully exploit the GPU architecture.},
  isbn = {978-1-4503-0072-8},
  keywords = {gpu,island model,parallel},
  file = {C\:\\Users\\smfla\\Zotero\\storage\\4QIW9K89\\Luong et al. - 2010 - GPU-based island model for evolutionary algorithms.pdf}
}

@online{MITLicense2006,
  title = {The {{MIT License}}},
  date = {2006-10-31T04:56:16+00:00},
  url = {https://opensource.org/license/mit/},
  urldate = {2023-07-26},
  abstract = {Copyright {$<$}YEAR{$>$} {$<$}COPYRIGHT HOLDER{$>$} Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software…},
  langid = {american},
  organization = {{Open Source Initiative}},
  file = {C\:\\Users\\smfla\\Zotero\\storage\\3AEWBNY7\\mit.html}
}

@online{OneMaxProblema,
  title = {One {{Max Problem}} — {{DEAP}} 1.3.3 Documentation},
  url = {https://deap.readthedocs.io/en/master/examples/ga_onemax.html},
  urldate = {2023-06-11},
  file = {C\:\\Users\\smfla\\Zotero\\storage\\QW6FARE9\\ga_onemax.html}
}

@software{Pagmo2023,
  title = {Pagmo},
  date = {2023-08-08T06:38:07Z},
  origdate = {2017-01-08T21:53:43Z},
  url = {https://github.com/esa/pagmo2},
  urldate = {2023-08-09},
  abstract = {A C++ platform to perform parallel computations of optimisation tasks (global and local) via the asynchronous generalized island model.},
  organization = {{European Space Agency}},
  keywords = {artificial-intelligence,evolutionary-algorithms,evolutionary-strategy,genetic-algorithm,metaheuristics,multi-objective-optimization,optimization,optimization-algorithms,optimization-methods,optimization-tools,pagmo,parallel-computing,parallel-processing,python,python3,stochastic-optimizers}
}

@software{peronePeronePyevolve2023,
  title = {Perone/{{Pyevolve}}},
  author = {Perone, Christian S.},
  date = {2023-05-23T06:54:12Z},
  origdate = {2011-08-10T23:41:24Z},
  url = {https://github.com/perone/Pyevolve},
  urldate = {2023-06-08},
  abstract = {Pyevolve}
}

@incollection{peterj.angelineGeneticProgrammingEmergent1994,
  title = {Genetic {{Programming}} and {{Emergent Intelligence}}},
  booktitle = {Advances in Genetic Programming},
  author = {{Peter J. Angeline}},
  date = {1994},
  series = {Advances in Genetic Programming},
  number = {1},
  pages = {75--97},
  publisher = {{MIT press}},
  location = {{Cambridge (Mass.) London}},
  isbn = {978-0-262-11188-1},
  langid = {english}
}

@incollection{peterjangelineEvolutionaryInductionSubroutines1992,
  title = {The Evolutionary Induction of Subroutines},
  booktitle = {Proceedings of the Fourteenth Annual Conference of the Cognitive Science Society},
  author = {{Peter J Angeline} and {Jordan B Pollack}},
  date = {1992},
  pages = {236--241},
  location = {{Bloomington, Indiana}}
}

@book{poliFieldGuideGenetic2008a,
  title = {A Field Guide to Genetic Programming},
  author = {Poli, Riccardo and Langdon, William B. and McPhee, Nicholas F. and Koza, John R.},
  date = {2008},
  publisher = {{Lulu Press]}},
  location = {{[Morrisville, NC}},
  isbn = {978-1-4092-0073-4},
  langid = {english},
  pagetotal = {233}
}

@software{Pygmo2023,
  title = {Pygmo},
  date = {2023-06-04T21:30:56Z},
  origdate = {2020-01-07T09:22:45Z},
  url = {https://github.com/esa/pygmo2},
  urldate = {2023-06-08},
  abstract = {A Python platform to perform parallel computations of optimisation tasks (global and local) via the asynchronous generalized island model.},
  organization = {{European Space Agency}},
  keywords = {artificial-intelligence,evolutionary-algorithms,evolutionary-computation,evolutionary-strategy,island-model,meta-heuristic,meta-heuristics,multiobjective-optimization,optimization,optimization-algorithms,optimization-methods,optimization-problem,parallel-computing,parallel-processing,stochastic-optimization}
}

@inproceedings{roscaLearningAdaptingRepresentations1994,
  title = {Learning by Adapting Representations in Genetic Programming},
  booktitle = {Proceedings of the {{First IEEE Conference}} on {{Evolutionary Computation}}. {{IEEE World Congress}} on {{Computational Intelligence}}},
  author = {Rosca, J.P. and Ballard, D.H.},
  date = {1994},
  pages = {407--412},
  publisher = {{IEEE}},
  location = {{Orlando, FL, USA}},
  doi = {10.1109/ICEC.1994.349916},
  url = {http://ieeexplore.ieee.org/document/349916/},
  urldate = {2023-06-23},
  eventtitle = {First {{IEEE Conference}} on {{Evolutionary Computation}}. {{IEEE World Congress}} on {{Computational Intelligence}}},
  isbn = {978-0-7803-1899-1}
}

@article{rosenbrockAutomaticMethodFinding1960,
  title = {An {{Automatic Method}} for {{Finding}} the {{Greatest}} or {{Least Value}} of a {{Function}}},
  author = {Rosenbrock, H. H.},
  date = {1960-03-01},
  journaltitle = {The Computer Journal},
  shortjournal = {The Computer Journal},
  volume = {3},
  number = {3},
  pages = {175--184},
  issn = {0010-4620, 1460-2067},
  doi = {10.1093/comjnl/3.3.175},
  url = {https://academic.oup.com/comjnl/article-lookup/doi/10.1093/comjnl/3.3.175},
  urldate = {2023-07-04},
  langid = {english},
  file = {C\:\\Users\\smfla\\Zotero\\storage\\GMVKPYLR\\Rosenbrock - 1960 - An Automatic Method for Finding the Greatest or Le.pdf}
}

@article{sahniApproximateAlgorithmsKnapsack1975,
  title = {Approximate Algorithms for the 0/1 Knapsack Problem},
  author = {Sahni, Sartaj},
  date = {1975},
  journaltitle = {Journal of the ACM (JACM)},
  volume = {22},
  number = {1},
  pages = {115--124}
}

@online{SchlatterbeckPgapackParallel,
  title = {Schlatterbeck/Pgapack: {{Parallel Genetic Algorithm Library}} Originally by {{David Levine}} from {{Argonne National Laboratory}}},
  url = {https://github.com/schlatterbeck/pgapack/tree/master},
  urldate = {2023-08-09},
  file = {C\:\\Users\\smfla\\Zotero\\storage\\2FENR22J\\master.html}
}

@online{SchlatterbeckPgapyPythona,
  title = {Schlatterbeck/Pgapy: {{Python}} Wrapper for Pgapack, the Parallel Genetic Algorithm Library},
  url = {https://github.com/schlatterbeck/pgapy},
  urldate = {2023-08-09},
  file = {C\:\\Users\\smfla\\Zotero\\storage\\A9XV5GLN\\pgapy.html}
}

@article{schmittHalfBillionSimulations2015a,
  title = {Half a {{Billion Simulations}}: {{Evolutionary Algorithms}} and {{Distributed Computing}} for {{Calibrating}} the {{Simpoplocal Geographical Model}}},
  shorttitle = {Half a {{Billion Simulations}}},
  author = {Schmitt, Clara and Rey-Coyrehourcq, Sébastien and Reuillon, Romain and Pumain, Denise},
  date = {2015-04-01},
  journaltitle = {Environment and Planning B: Planning and Design},
  shortjournal = {Environ Plann B Plann Des},
  volume = {42},
  number = {2},
  pages = {300--315},
  publisher = {{SAGE Publications Ltd STM}},
  issn = {0265-8135},
  doi = {10.1068/b130064p},
  url = {https://doi.org/10.1068/b130064p},
  urldate = {2023-08-08},
  abstract = {Multiagent geographical models integrate very large numbers of spatial interactions. In order to validate these models a large amount of computing is necessary for their simulation and calibration. Here a new data-processing chain, including an automated calibration procedure, is tested on a computational grid using evolutionary algorithms. This is applied for the first time to a geographical model designed to simulate the evolution of an early urban settlement system. The method enables us to reduce the computing time and provides robust results. Using this method, we identify several parameter settings that minimize three objective functions that quantify how closely the model results match a reference pattern. As the values of each parameter in different settings are very close, this estimation considerably reduces the initial possible domain of variation of the parameters. Thus the model is a useful tool for further multiple applications in empirical historical situations.},
  langid = {english},
  file = {C\:\\Users\\smfla\\Zotero\\storage\\U9F8NKMZ\\Schmitt et al. - 2015 - Half a Billion Simulations Evolutionary Algorithm.pdf}
}

@book{shiffmanNatureCode2012,
  title = {The Nature of Code},
  author = {Shiffman, Daniel},
  date = {2012},
  edition = {Version 1.0, generated December 6, 2012},
  publisher = {{Selbstverl.}},
  location = {{s.l.}},
  isbn = {978-0-9859308-0-6},
  langid = {english},
  pagetotal = {498}
}

@software{slatermunozKeenKotlinGenetic2021,
  title = {Keen | {{Kotlin Genetic Algorithm Framework}}},
  author = {Slater Muñoz, Ignacio},
  origdate = {2021-02-06T11:46:48Z},
  url = {https://github.com/r8vnhill/keen},
  abstract = {Keen is a Kotlin genetic algorithms' framework},
  keywords = {genetic-algorithms,genetic-programming,kotlin}
}

@online{StreamJavaPlatform,
  title = {Stream ({{Java Platform SE}} 8 )},
  url = {https://docs.oracle.com/javase/8/docs/api/java/util/stream/Stream.html},
  urldate = {2023-07-26},
  file = {C\:\\Users\\smfla\\Zotero\\storage\\SZV75A9G\\Stream.html}
}

@online{TopProgrammingLanguages,
  title = {The Top Programming Languages},
  url = {https://octoverse.github.com/2022/top-programming-languages},
  urldate = {2023-07-21},
  abstract = {Explore the top programming languages on GitHub—and what languages are growing the fastest.},
  langid = {british},
  organization = {{The State of the Octoverse}},
  file = {C\:\\Users\\smfla\\Zotero\\storage\\PL3HI6TX\\top-programming-languages.html}
}

@article{tsutsuiMultiparentRecombinationSimplex1999,
  title = {Multi-Parent Recombination with Simplex Crossover in Real-Coded Genetic Algorithms},
  author = {Tsutsui, Shigeyoshi and Yamamura, Masayuki and Higuchi, T.},
  date = {1999-01-01},
  journaltitle = {Proceedings of Genetic and Evolutionary Computation Conference},
  shortjournal = {Proceedings of Genetic and Evolutionary Computation Conference},
  abstract = {In this paper, we proposed simplex crossover (SPX), a multi-parent recombination operator for real-coded genetic algorithms. SPX generates offspring vector values by uniformly sampling values from simplex formed by m (2 ≤ m ≤ number of parameters + 1) parent vectors. The SPX features an independence from of coordinate systems. Experimental results using test functions, which are commonly used in studies of evolutionary algorithms, showed SPX works well on functions having multimodality and/or epistasis with a medium number of parents: 3-parent on a low dimensional function or 4 parents on high dimensional functions.},
  file = {C\:\\Users\\smfla\\Zotero\\storage\\6RVR5HUS\\Tsutsui et al. - 1999 - Multi-parent recombination with simplex crossover .pdf}
}

@article{turingCOMPUTINGMACHINERYINTELLIGENCE1950a,
  title = {I.—{{COMPUTING MACHINERY AND INTELLIGENCE}}},
  author = {Turing, A. M.},
  date = {1950-10-01},
  journaltitle = {Mind},
  volume = {LIX},
  number = {236},
  pages = {433--460},
  issn = {1460-2113, 0026-4423},
  doi = {10.1093/mind/LIX.236.433},
  url = {https://academic.oup.com/mind/article/LIX/236/433/986238},
  urldate = {2023-06-10},
  langid = {english}
}

@online{TypesafeBuildersKotlin,
  title = {Type-Safe Builders | {{Kotlin}}},
  url = {https://kotlinlang.org/docs/type-safe-builders.html},
  urldate = {2023-07-31},
  langid = {american},
  organization = {{Kotlin Help}},
  file = {C\:\\Users\\smfla\\Zotero\\storage\\LTCQWBB9\\type-safe-builders.html}
}

@inproceedings{vanluongParallelHybridEvolutionary2010,
  title = {Parallel Hybrid Evolutionary Algorithms on {{GPU}}},
  booktitle = {{{IEEE Congress}} on {{Evolutionary Computation}}},
  author = {Van Luong, Thé and Melab, Nouredine and Talbi, El-Ghazali},
  date = {2010-07},
  pages = {1--8},
  issn = {1941-0026},
  doi = {10.1109/CEC.2010.5586403},
  abstract = {Over the last years, interest in hybrid meta-heuristics has risen considerably in the field of optimization. Combinations of methods such as evolutionary algorithms and local searches have provided very powerful search algorithms. However, due to their complexity, the computational time of the solution search exploration remains exorbitant when large problem instances are to be solved. Therefore, the use of GPU-based parallel computing is required as a complementary way to speed up the search. This paper presents a new methodology to design and implement efficiently and effectively hybrid evolutionary algorithms on GPU accelerators. The methodology enables efficient mappings of the explored search space onto the GPU memory hierarchy. The experimental results show that the approach is very efficient especially for large problem instances.},
  eventtitle = {{{IEEE Congress}} on {{Evolutionary Computation}}},
  keywords = {Evolutionary computation,Graphics processing unit,Indexes,Instruction sets,Kernel,Memory management,Optimization},
  file = {C\:\\Users\\smfla\\Zotero\\storage\\XD28SDDV\\Van Luong et al. - 2010 - Parallel hybrid evolutionary algorithms on GPU.pdf;C\:\\Users\\smfla\\Zotero\\storage\\UGLY2VEX\\5586403.html}
}

@article{wangFastPolynomialTime2022,
  title = {Fast {{Polynomial Time Approximate Solution}} for 0-1 {{Knapsack Problem}}},
  author = {Wang, Zhengyuan and Zhang, Hui and Li, Yali},
  date = {2022-10-22},
  journaltitle = {Computational Intelligence and Neuroscience},
  volume = {2022},
  pages = {e1266529},
  publisher = {{Hindawi}},
  issn = {1687-5265},
  doi = {10.1155/2022/1266529},
  url = {https://www.hindawi.com/journals/cin/2022/1266529/},
  urldate = {2023-08-09},
  abstract = {0-1 Knapsack problem (KP) is NP-hard. Approximate solution is vital for solving KP exactly. In this paper, a fast polynomial time approximate solution (FPTAS) is proposed for KP. FPTAS is a local search algorithm. The best approximate solution to KP can be found in the neighborhood of the solution of upper bound for exact k-item knapsack problem (E-kKP) where k is near to the critical item s. FPTAS, in practice, often achieves high accuracy with high speed in solving KP. The computational experiments show that the approximate algorithm for KP is valid.},
  langid = {english},
  file = {C\:\\Users\\smfla\\Zotero\\storage\\5CWFIDWZ\\Wang et al. - 2022 - Fast Polynomial Time Approximate Solution for 0-1 .pdf}
}

@online{wilhelmstotterJeneticsJavaGenetica,
  title = {Jenetics: {{Java Genetic Algorithm Library}}},
  shorttitle = {Jenetics},
  author = {Wilhelmstötter, Franz},
  url = {https://jenetics.io/},
  urldate = {2023-06-08},
  abstract = {Jenetics is a Genetic Algorithm, Evolutionary Algorithm, Genetic Programming, and Multi-objective Optimization library, written in modern-day Java.},
  langid = {english},
  organization = {{jenetics.io}},
  file = {C\:\\Users\\smfla\\Zotero\\storage\\6PCGVT2I\\jenetics.io.html}
}

@inproceedings{yaroshkoMultithreadedEvolutionaryComputing2019,
  title = {Multithreaded {{Evolutionary Computing}}},
  booktitle = {2019 {{IEEE}} 2nd {{Ukraine Conference}} on {{Electrical}} and {{Computer Engineering}} ({{UKRCON}})},
  author = {Yaroshko, Sergii and Yaroshko, Svitlana},
  date = {2019-07},
  pages = {1041--1045},
  doi = {10.1109/UKRCON.2019.8879863},
  abstract = {There are described different methods of usage of the standard.NET class Task for the creation of multithreaded applications in C\#. For instance, to separate the thread which performs expensive calculations from the one, which supports the Windows application's user interface. It is given an example of the usage of described techniques in the application, which solves the traveling salesman problem for a large number of cities using the genetic algorithm. It is presented the results of the experimental performance evaluation of the algorithm, depending on the number of parallel calculation execution threads.},
  eventtitle = {2019 {{IEEE}} 2nd {{Ukraine Conference}} on {{Electrical}} and {{Computer Engineering}} ({{UKRCON}})},
  keywords = {class Task,execution thread,genetic algorithm,Genetic algorithms,Graphical user interfaces,Instruction sets,interaction with the execution thread,parallelism,Sociology,Statistics,Task analysis,traveling salesman problem,Urban areas}
}

@book{yuIntroductionEvolutionaryAlgorithms2010,
  title = {Introduction to Evolutionary Algorithms},
  author = {Yu, Xinjie and Gen, Mitsuo},
  date = {2010},
  series = {Decision Engineering},
  publisher = {{Springer}},
  location = {{London ; New York}},
  isbn = {978-1-84996-128-8 978-1-84996-129-5},
  pagetotal = {418},
  keywords = {Evolutionary computation,Evolutionary programming (Computer science),Genetic algorithms},
  annotation = {OCLC: ocn495781315}
}
